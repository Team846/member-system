{"version":3,"sources":["routes/private/MailingLists.js","components/Button.js","components/Input.js","components/Dashboard.js"],"names":["MailingLists","deleteMailingList","alias","window","confirm","concat","name","enqueueSnackbar","_this","props","firebase","firestore","doc","id","delete","then","catch","e","message","modelModalData","setState","modal","Object","_home_travis_build_Team846_member_system_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","state","data","_home_travis_build_Team846_member_system_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","target","value","createMailingList","preventDefault","collection","add","aliases","Date","now","members","open","updateAliasField","field","find","it","_this2","this","unsubscribe","onSnapshot","snapshot","docs","map","_this3","classes","react__WEBPACK_IMPORTED_MODULE_12___default","a","createElement","_components_Dashboard__WEBPACK_IMPORTED_MODULE_13__","title","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","container","justify","item","key","xs","md","expandIcon","_material_ui_icons__WEBPACK_IMPORTED_MODULE_10__","style","width","_components_Input__WEBPACK_IMPORTED_MODULE_16__","autoFocus","label","onChange","InputProps","endAdornment","position","multiline","rowsMax","_components_Button__WEBPACK_IMPORTED_MODULE_14__","fullWidth","noMarginTop","onClick","variant","size","other","_home_travis_build_Team846_member_system_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","set","onClose","alignItems","className","modalPaper","onSubmit","type","fab","color","Component","styles","theme","bottom","spacing","unit","right","padding","withStyles","withSnackbar","Button","react__WEBPACK_IMPORTED_MODULE_2___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_1__","assign","marginTop","defaultProps","Input","inputLabelRef","labelWidth","ReactDOM","findDOMNode","offsetWidth","_this$props","options","react__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","margin","ref","input","option","Dashboard","closeDrawer","openDrawer","children","react__WEBPACK_IMPORTED_MODULE_7__","toolbar","menuButton","_material_ui_icons__WEBPACK_IMPORTED_MODULE_8__","component","paper","drawerPaper","values","routes","private","route","button","path","history","push","contentSpacer","_home_travis_build_Team846_member_system_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","mixins","marginLeft","marginRight","display","withRouter"],"mappings":"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","file":"static/js/MailingLists.5ab24755.chunk.js","sourcesContent":["import {\n    Divider,\n    ExpansionPanel,\n    ExpansionPanelActions,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary,\n    Fab,\n    Grid,\n    InputAdornment,\n    Modal,\n    Paper,\n    Typography,\n    withStyles\n} from \"@material-ui/core\";\nimport {Add, ExpandMore} from \"@material-ui/icons\";\nimport firebase from \"firebase/app\";\nimport React, {Component} from \"react\";\nimport Dashboard from \"../../components/Dashboard\";\nimport Button from \"../../components/Button\";\nimport {withSnackbar} from \"notistack\";\nimport * as PropTypes from \"prop-types\";\nimport Input from \"../../components/Input\";\n\nclass MailingLists extends Component {\n    componentDidMount() {\n        this.unsubscribe =\n            firebase.firestore().collection('mailing-lists')\n                .onSnapshot(snapshot => {\n                    this.setState({\n                        aliases: snapshot.docs.map(doc => ({\n                            ...doc.data(),\n                            id: doc.id\n                        }))\n                    })\n                });\n    }\n\n    componentWillUnmount() {\n        this.unsubscribe();\n    }\n\n    deleteMailingList = alias => () => {\n        const deletionApproved = window.confirm(`Are you sure you want to delete the \"${alias.name}\" mailing list`);\n        if (deletionApproved) {\n\n            const enqueueSnackbar = this.props.enqueueSnackbar;\n            firebase.firestore().doc(`mailing-lists/${alias.id}`).delete()\n                .then(() => enqueueSnackbar(`Deleted the \"${alias.name}\" mailing list`))\n                .catch(e => enqueueSnackbar(e.message))\n        }\n    };\n\n    static propTypes = {\n        classes: PropTypes.object.isRequired,\n        enqueueSnackbar: PropTypes.func.isRequired\n    };\n\n    modelModalData = name => e => {\n        this.setState({\n            modal: {\n                ...this.state.modal,\n                data: {\n                    ...this.state.modal.data,\n                    [name]: e.target.value\n                }\n            }\n        })\n    };\n\n    createMailingList = e => {\n        e.preventDefault();\n        firebase.firestore().collection('mailing-lists').add(this.state.modal.data)\n            .then(() => this.props.enqueueSnackbar(\"Created mailing list\"))\n            .catch(e => this.props.enqueueSnackbar(e.message));\n    };\n\n    render() {\n        const {classes} = this.props;\n        const modal = this.state.modal.data;\n\n        return (\n            <Dashboard title={\"Mailing Lists\"}>\n                <Grid container justify={\"center\"}>\n                    {this.state.aliases.map(alias =>\n                        <Grid item key={alias.id} xs={12} md={6}>\n                            <ExpansionPanel>\n                                <ExpansionPanelSummary expandIcon={<ExpandMore/>}>\n                                    <Typography>{alias.name}</Typography>\n                                </ExpansionPanelSummary>\n                                <ExpansionPanelDetails>\n                                    <form style={{width: \"100%\"}}>\n                                        <Input autoFocus label={\"Name\"} onChange={this.updateAliasField(alias, \"name\")}\n                                               value={alias.name}/>\n                                        <Input\n                                            InputProps={{\n                                                endAdornment: <InputAdornment\n                                                    position={\"end\"}>@lynbrookrobotics.com</InputAdornment>\n                                            }}\n                                            onChange={this.updateAliasField(alias, \"alias\")}\n                                            label={\"Alias\"} value={alias.alias}/>\n                                        <Input\n                                            onChange={this.updateAliasField(alias, \"members\")}\n                                            multiline rowsMax={10} label={\"Members\"} value={alias.members}/>\n                                    </form>\n                                </ExpansionPanelDetails>\n                                <Divider/>\n                                <ExpansionPanelActions>\n                                    <Button\n                                        fullWidth={false}\n                                        noMarginTop\n                                        onClick={this.deleteMailingList(alias)}\n                                        variant={\"outlined\"}\n                                        size={\"small\"}>Delete Alias</Button>\n                                    <Button\n                                        fullWidth={false}\n                                        noMarginTop\n                                        onClick={() => {\n                                            // noinspection JSUnusedLocalSymbols\n                                            const {id, ...other} = alias;\n                                            firebase.firestore().doc(`mailing-lists/${alias.id}`)\n                                                .set({...other})\n                                                .then(() => this.props.enqueueSnackbar(`Updated the \"${alias.name}\" mailing list`))\n                                                .catch(e => this.props.enqueueSnackbar(e.message));\n                                        }}\n                                        size={\"small\"}>Save</Button>\n                                </ExpansionPanelActions>\n                            </ExpansionPanel>\n                        </Grid>\n                    )}\n                </Grid>\n                <Modal\n                    open={this.state.modal.open}\n                    onClose={() => this.setState({modal: {...this.state.modal, open: false}})}>\n                    <Grid container alignItems={\"center\"} justify={\"center\"}>\n                        <Grid item xs={12} md={6}>\n                            <Paper className={classes.modalPaper}>\n                                <Typography variant={\"h6\"}>New Alias</Typography>\n                                <form onSubmit={this.createMailingList}>\n                                    <Input autoFocus label={\"Name\"} onChange={this.modelModalData(\"name\")}\n                                           value={modal.name}/>\n                                    <Input\n                                        InputProps={{\n                                            endAdornment: <InputAdornment\n                                                position={\"end\"}>@lynbrookrobotics.com</InputAdornment>\n                                        }}\n                                        onChange={this.modelModalData(\"alias\")}\n                                        label={\"Alias\"} value={modal.alias}/>\n                                    <Input\n                                        onChange={this.modelModalData(\"members\")}\n                                        multiline rowsMax={10} label={\"Members\"} value={modal.members}/>\n                                    <Button type={\"submit\"}>Create</Button>\n                                </form>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Modal>\n                <Fab className={classes.fab}\n                     color={\"primary\"}\n                     onClick={() => this.setState({modal: {...this.state.modal, open: true}})}>\n                    <Add/>\n                </Fab>\n            </Dashboard>\n        )\n    }\n\n    state = {\n        aliases: [],\n        modal: {\n            data: {\n                alias: Date.now(),\n                name: \"New Alias\",\n                members: \"\"\n            },\n            open: false\n        }\n    };\n\n    static styles = theme => ({\n        fab: {\n            bottom: theme.spacing.unit * 2,\n            right: theme.spacing.unit * 2,\n            position: \"fixed\",\n        },\n        modalPaper: {\n            padding: theme.spacing.unit * 2\n        }\n    });\n\n    updateAliasField = (alias, field) => e => {\n        const aliases = [].concat(this.state.aliases);\n        aliases.find(it => it.id === alias.id)[field] = e.target.value;\n        this.setState({\n            aliases\n        });\n    };\n}\n\nexport default withStyles(MailingLists.styles)(withSnackbar(MailingLists));","import * as PropTypes from \"prop-types\";\nimport {Button as MuiButton} from \"@material-ui/core\";\nimport React from \"react\";\n\nfunction Button(props) {\n    const {noMarginTop, ...other} = props;\n\n    return (\n        <MuiButton\n            fullWidth\n            color=\"primary\"\n            style={{\n                marginTop: noMarginTop ? 8 : 24\n            }}\n            variant=\"contained\"\n            {...other}/>\n    );\n}\n\nButton.defaultProps = {\n    noMarginTop: false\n};\n\nButton.propTypes = {\n    noMarginTop: PropTypes.bool\n};\n\nexport default Button;","import {FormControl, InputLabel, MenuItem, OutlinedInput, Select, TextField} from \"@material-ui/core\";\nimport React, {Component} from \"react\";\nimport ReactDOM from \"react-dom\";\n\nclass Input extends Component {\n    inputLabelRef = null;\n\n    componentDidMount() {\n        if (this.inputLabelRef) {\n            this.setState({\n                labelWidth: ReactDOM.findDOMNode(this.inputLabelRef).offsetWidth\n            });\n        }\n    }\n\n    render() {\n        const {label, options, type, ...other} = this.props;\n\n        if (type === \"select\") {\n            return (\n                <FormControl\n                    fullWidth\n                    margin=\"normal\"\n                    variant=\"outlined\">\n                    <InputLabel\n                        ref={ref => this.inputLabelRef = ref}\n                        variant=\"outlined\">\n                        {label}\n                    </InputLabel>\n                    <Select\n                        input={\n                            <OutlinedInput labelWidth={this.state.labelWidth}/>\n                        }\n                        variant=\"outlined\"\n                        {...other}>\n                        {options.map(option => <MenuItem key={option} value={option}>{option}</MenuItem>)}\n                    </Select>\n                </FormControl>\n            )\n        } else {\n            return (\n                <TextField\n                    fullWidth\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    {...this.props}/>\n            )\n        }\n    }\n\n    state = {\n        labelWidth: 0\n    };\n}\n\nexport default Input;","import * as PropTypes from 'prop-types';\nimport { AppBar, Toolbar, Typography, Drawer, IconButton, List, ListItem, ListItemText } from '@material-ui/core';\nimport React, { Component, Fragment } from 'react';\nimport { Menu } from \"@material-ui/icons\";\nimport { withStyles } from '@material-ui/core/styles';\nimport {routes} from \"../settings\";\nimport {withRouter} from \"react-router-dom\";\n\nclass Dashboard extends Component {\n    closeDrawer = () => {\n        this.setState({\n            open: false\n        });\n    };\n\n    openDrawer = () => {\n        this.setState({\n            open: true\n        });\n    };\n\n    static propTypes = {\n        children: PropTypes.any.isRequired,\n        classes: PropTypes.object.isRequired,\n        title: PropTypes.string.isRequired\n    };\n\n    render() {\n        const { children, classes, title } = this.props;\n        return (\n            <Fragment>\n                <AppBar>\n                    <Toolbar className={classes.toolbar}>\n                        <IconButton className={classes.menuButton} color=\"inherit\" onClick={this.openDrawer}>\n                            <Menu />\n                        </IconButton>\n                        <Typography color=\"inherit\" component=\"h1\" variant=\"h5\">{title}</Typography>\n                    </Toolbar>\n                </AppBar>\n                <Drawer classes={{paper: classes.drawerPaper}} onClose={this.closeDrawer} open={this.state.open} variant=\"temporary\">\n                    <List>\n                        <ListItem>\n                            <ListItemText>\n                                <Typography variant=\"h5\">Member System</Typography>\n                            </ListItemText>\n                        </ListItem>\n                        {Object.values(routes.private).map(route =>\n                            <ListItem button key={route.path} onClick={() => this.props.history.push(route.path)}>\n                                <ListItemText>{route.label}</ListItemText>\n                            </ListItem>)}\n                    </List>\n                </Drawer>\n                <div className={classes.contentSpacer}/>\n                {children}\n            </Fragment>\n        );\n    }\n\n    state = {\n        open: false\n    };\n\n    static styles = theme => ({\n        contentSpacer: {\n            ...theme.mixins.toolbar\n        },\n        drawerPaper: {\n            width: 300\n        },\n        menuButton: {\n            marginLeft: -12,\n            marginRight: theme.spacing.unit\n        },\n        toolbar: {\n            alignItems: \"center\",\n            display: \"flex\"\n        }\n    });\n}\n\nexport default withStyles(Dashboard.styles)(withRouter(Dashboard));\n"],"sourceRoot":""}