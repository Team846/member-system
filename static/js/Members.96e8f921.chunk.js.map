{"version":3,"sources":["routes/private/MembersTable.js","components/Dashboard.js"],"names":["MembersTable","generateTableHeaderCellFromUserProfileField","field","_classNames","key","type","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","react__WEBPACK_IMPORTED_MODULE_8__","content","map","_this","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","className","classNames","Object","_home_travis_build_Team846_member_system_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","props","classes","stickyColumn","stickyHeader","stickyColumnHeader","generateCellFromUserAndField","user","generateRowFromUser","uid","userProfileFields","state","users","_this2","this","firebase","firestore","collection","get","then","snapshot","setState","docs","doc","_home_travis_build_Team846_member_system_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","data","id","_components_Dashboard__WEBPACK_IMPORTED_MODULE_12__","title","style","whiteSpace","Component","styles","theme","backgroundColor","palette","background","default","left","position","willChange","zIndex","top","withStyles","Dashboard","closeDrawer","open","openDrawer","_this$props","children","react__WEBPACK_IMPORTED_MODULE_7___default","react__WEBPACK_IMPORTED_MODULE_7__","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","toolbar","menuButton","color","onClick","_material_ui_icons__WEBPACK_IMPORTED_MODULE_8__","component","variant","paper","drawerPaper","onClose","values","routes","private","route","button","path","history","push","label","contentSpacer","mixins","width","marginLeft","marginRight","spacing","unit","alignItems","display","withRouter"],"mappings":"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","file":"static/js/Members.96e8f921.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport React, {Component, Fragment} from \"react\";\nimport {Table, TableBody, TableCell, TableHead, TableRow, withStyles} from \"@material-ui/core\";\nimport {userProfileFields} from \"../../settings\";\nimport Dashboard from \"../../components/Dashboard\";\nimport classNames from \"classnames\";\nimport * as PropTypes from \"prop-types\";\n\nclass MembersTable extends Component {\n    componentDidMount() {\n        firebase.firestore().collection('users').get().then(snapshot => {\n            this.setState({\n                users: snapshot.docs.map(doc => ({\n                    ...doc.data(),\n                    uid: doc.id\n                }))\n            });\n        });\n    }\n\n    generateTableHeaderCellFromUserProfileField = field => {\n        const {key, type} = field;\n\n        if (type === \"multi-input-field\" || type === \"group\") {\n            return (\n                <Fragment key={field.key}>\n                    {field.content.map(this.generateTableHeaderCellFromUserProfileField)}\n                </Fragment>\n            )\n        } else {\n            return <TableCell\n                className={classNames({\n                    [this.props.classes.stickyColumn]: key === \"Name\",\n                    [this.props.classes.stickyHeader]: true,\n                    [this.props.classes.stickyColumnHeader]: key === \"Name\"\n                })}\n                key={field.key}>{field.key}</TableCell>\n        }\n    };\n\n    generateCellFromUserAndField = user => field => {\n        const {key, type} = field;\n\n        if (type === \"multi-input-field\" || type === \"group\") {\n            return (\n                <Fragment key={field.key}>\n                    {field.content.map(this.generateCellFromUserAndField(user))}\n                </Fragment>\n            )\n        } else {\n            return <TableCell className={key === \"Name\" ? this.props.classes.stickyColumn : \"\"}\n                              key={field.key}>{user[field.key]}</TableCell>;\n        }\n    };\n\n    generateRowFromUser = user => {\n\n        return <TableRow key={user.uid}>\n            {userProfileFields.map(this.generateCellFromUserAndField(user))}\n        </TableRow>\n    };\n\n    static propTypes = {\n        classes: PropTypes.object.isRequired\n    };\n\n    render() {\n        return (\n            <Dashboard title={\"Members Table\"}>\n                <Table style={{whiteSpace: \"nowrap\"}}>\n                    <TableHead className={this.props.classes.stickyHeader}>\n                        <TableRow>\n                            {userProfileFields.map(this.generateTableHeaderCellFromUserProfileField)}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {this.state.users.map(this.generateRowFromUser)}\n                    </TableBody>\n                </Table>\n            </Dashboard>\n        );\n    }\n\n    state = {\n        users: []\n    };\n\n    static styles = theme => ({\n        stickyColumn: {\n            backgroundColor: theme.palette.background.default,\n            left: 0,\n            position: \"sticky\",\n            willChange: \"transform\",\n            zIndex: 1\n        },\n        stickyColumnHeader: {\n            zIndex: \"3 !important\"\n        },\n        stickyHeader: {\n            backgroundColor: theme.palette.background.default,\n            top: 64,\n            position: \"sticky\",\n            willChange: \"transform\",\n            zIndex: 2\n        }\n    });\n}\n\nexport default withStyles(MembersTable.styles)(MembersTable);","import * as PropTypes from 'prop-types';\nimport { AppBar, Toolbar, Typography, Drawer, IconButton, List, ListItem, ListItemText } from '@material-ui/core';\nimport React, { Component, Fragment } from 'react';\nimport { Menu } from \"@material-ui/icons\";\nimport { withStyles } from '@material-ui/core/styles';\nimport {routes} from \"../settings\";\nimport {withRouter} from \"react-router-dom\";\n\nclass Dashboard extends Component {\n    closeDrawer = () => {\n        this.setState({\n            open: false\n        });\n    };\n\n    openDrawer = () => {\n        this.setState({\n            open: true\n        });\n    };\n\n    static propTypes = {\n        children: PropTypes.any.isRequired,\n        classes: PropTypes.object.isRequired,\n        title: PropTypes.string.isRequired\n    };\n\n    render() {\n        const { children, classes, title } = this.props;\n        return (\n            <Fragment>\n                <AppBar>\n                    <Toolbar className={classes.toolbar}>\n                        <IconButton className={classes.menuButton} color=\"inherit\" onClick={this.openDrawer}>\n                            <Menu />\n                        </IconButton>\n                        <Typography color=\"inherit\" component=\"h1\" variant=\"h5\">{title}</Typography>\n                    </Toolbar>\n                </AppBar>\n                <Drawer classes={{paper: classes.drawerPaper}} onClose={this.closeDrawer} open={this.state.open} variant=\"temporary\">\n                    <List>\n                        <ListItem>\n                            <ListItemText>\n                                <Typography variant=\"h5\">Member System</Typography>\n                            </ListItemText>\n                        </ListItem>\n                        {Object.values(routes.private).map(route =>\n                            <ListItem button key={route.path} onClick={() => this.props.history.push(route.path)}>\n                                <ListItemText>{route.label}</ListItemText>\n                            </ListItem>)}\n                    </List>\n                </Drawer>\n                <div className={classes.contentSpacer}/>\n                {children}\n            </Fragment>\n        );\n    }\n\n    state = {\n        open: false\n    };\n\n    static styles = theme => ({\n        contentSpacer: {\n            ...theme.mixins.toolbar\n        },\n        drawerPaper: {\n            width: 300\n        },\n        menuButton: {\n            marginLeft: -12,\n            marginRight: theme.spacing.unit\n        },\n        toolbar: {\n            alignItems: \"center\",\n            display: \"flex\"\n        }\n    });\n}\n\nexport default withStyles(Dashboard.styles)(withRouter(Dashboard));\n"],"sourceRoot":""}