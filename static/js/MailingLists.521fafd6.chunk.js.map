{"version":3,"sources":["routes/private/MailingLists.js","components/Button.js","components/Input.js","components/Dashboard.js"],"names":["MailingLists","deleteMailingList","alias","window","confirm","concat","name","enqueueSnackbar","_this","props","firebase","firestore","doc","id","delete","then","catch","e","message","modelModalData","isCheckbox","arguments","length","undefined","setState","modal","Object","_home_travis_build_Team846_member_system_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","state","data","_home_travis_build_Team846_member_system_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","target","checked","value","createMailingList","preventDefault","collection","add","aliases","Date","now","members","private","open","updateAliasField","field","find","it","_this2","this","unsubscribe","onSnapshot","snapshot","docs","map","_this3","classes","react__WEBPACK_IMPORTED_MODULE_12___default","a","createElement","_components_Dashboard__WEBPACK_IMPORTED_MODULE_13__","title","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","container","justify","item","key","xs","md","expandIcon","_material_ui_icons__WEBPACK_IMPORTED_MODULE_10__","style","width","_components_Input__WEBPACK_IMPORTED_MODULE_16__","autoFocus","label","onChange","InputProps","endAdornment","position","multiline","rowsMax","control","margin","_components_Button__WEBPACK_IMPORTED_MODULE_14__","fullWidth","noMarginTop","onClick","variant","size","other","_home_travis_build_Team846_member_system_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","set","onClose","alignItems","className","modalPaper","onSubmit","type","fab","color","Component","styles","theme","bottom","spacing","unit","right","padding","withStyles","withSnackbar","Button","react__WEBPACK_IMPORTED_MODULE_2___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_1__","assign","marginTop","defaultProps","Input","inputLabelRef","labelWidth","ReactDOM","findDOMNode","offsetWidth","_this$props","options","react__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","ref","input","option","Dashboard","closeDrawer","openDrawer","children","react__WEBPACK_IMPORTED_MODULE_8___default","_settings__WEBPACK_IMPORTED_MODULE_6__","Consumer","activeUser","react__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","toolbar","menuButton","_material_ui_icons__WEBPACK_IMPORTED_MODULE_9__","component","paper","drawerPaper","values","routes","route","permissionLevels","indexOf","minPermissionLevel","button","path","history","push","contentSpacer","_home_travis_build_Team846_member_system_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","mixins","marginLeft","marginRight","display","withRouter"],"mappings":"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","file":"static/js/MailingLists.521fafd6.chunk.js","sourcesContent":["import {\n    Checkbox,\n    Divider,\n    ExpansionPanel,\n    ExpansionPanelActions,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary,\n    Fab, FormControlLabel,\n    Grid,\n    InputAdornment,\n    Modal,\n    Paper,\n    Typography,\n    withStyles\n} from \"@material-ui/core\";\nimport {Add, ExpandMore} from \"@material-ui/icons\";\nimport firebase from \"firebase/app\";\nimport React, {Component} from \"react\";\nimport Dashboard from \"../../components/Dashboard\";\nimport Button from \"../../components/Button\";\nimport {withSnackbar} from \"notistack\";\nimport * as PropTypes from \"prop-types\";\nimport Input from \"../../components/Input\";\n\nclass MailingLists extends Component {\n    componentDidMount() {\n        this.unsubscribe =\n            firebase.firestore().collection('mailing-lists')\n                .onSnapshot(snapshot => {\n                    this.setState({\n                        aliases: snapshot.docs.map(doc => ({\n                            ...doc.data(),\n                            id: doc.id\n                        }))\n                    })\n                });\n    }\n\n    componentWillUnmount() {\n        this.unsubscribe();\n    }\n\n    deleteMailingList = alias => () => {\n        const deletionApproved = window.confirm(`Are you sure you want to delete the \"${alias.name}\" mailing list`);\n        if (deletionApproved) {\n\n            const enqueueSnackbar = this.props.enqueueSnackbar;\n            firebase.firestore().doc(`mailing-lists/${alias.id}`).delete()\n                .then(() => enqueueSnackbar(`Deleted the \"${alias.name}\" mailing list`))\n                .catch(e => enqueueSnackbar(e.message))\n        }\n    };\n\n    static propTypes = {\n        classes: PropTypes.object.isRequired,\n        enqueueSnackbar: PropTypes.func.isRequired\n    };\n\n    modelModalData = (name, isCheckbox = false) => e => {\n        this.setState({\n            modal: {\n                ...this.state.modal,\n                data: {\n                    ...this.state.modal.data,\n                    [name]: isCheckbox ? e.target.checked : e.target.value\n                }\n            }\n        })\n    };\n\n    createMailingList = e => {\n        e.preventDefault();\n        firebase.firestore().collection('mailing-lists').add(this.state.modal.data)\n            .then(() => this.props.enqueueSnackbar(\"Created mailing list\"))\n            .catch(e => this.props.enqueueSnackbar(e.message));\n    };\n\n    render() {\n        const {classes} = this.props;\n        const modal = this.state.modal.data;\n\n        return (\n            <Dashboard title={\"Mailing Lists\"}>\n                <Grid container justify={\"center\"}>\n                    {this.state.aliases.map(alias =>\n                        <Grid item key={alias.id} xs={12} md={7}>\n                            <ExpansionPanel>\n                                <ExpansionPanelSummary expandIcon={<ExpandMore/>}>\n                                    <Typography>{alias.name}</Typography>\n                                </ExpansionPanelSummary>\n                                <ExpansionPanelDetails>\n                                    <form style={{width: \"100%\"}}>\n                                        <Input autoFocus label={\"Name\"} onChange={this.updateAliasField(alias, \"name\")}\n                                               value={alias.name}/>\n                                        <Input\n                                            InputProps={{\n                                                endAdornment: <InputAdornment\n                                                    position={\"end\"}>@lynbrookrobotics.com</InputAdornment>\n                                            }}\n                                            onChange={this.updateAliasField(alias, \"alias\")}\n                                            label={\"Alias\"} value={alias.alias}/>\n                                        <Input\n                                            onChange={this.updateAliasField(alias, \"members\")}\n                                            multiline rowsMax={10} label={\"Members\"} value={alias.members}/>\n                                    </form>\n                                </ExpansionPanelDetails>\n                                <Divider/>\n                                <ExpansionPanelActions>\n                                    <FormControlLabel\n                                        control={<Checkbox onChange={this.updateAliasField(alias, \"private\", true)}\n                                                           checked={alias.private}/>} label={\"Private\"} margin={\"none\"}/>\n                                    <Button\n                                        fullWidth={false}\n                                        noMarginTop\n                                        onClick={this.deleteMailingList(alias)}\n                                        variant={\"outlined\"}\n                                        size={\"small\"}>Delete Alias</Button>\n                                    <Button\n                                        fullWidth={false}\n                                        noMarginTop\n                                        onClick={() => {\n                                            // noinspection JSUnusedLocalSymbols\n                                            const {id, ...other} = alias;\n                                            firebase.firestore().doc(`mailing-lists/${alias.id}`)\n                                                .set({...other})\n                                                .then(() => this.props.enqueueSnackbar(`Updated the \"${alias.name}\" mailing list`))\n                                                .catch(e => this.props.enqueueSnackbar(e.message));\n                                        }}\n                                        size={\"small\"}>Save</Button>\n                                </ExpansionPanelActions>\n                            </ExpansionPanel>\n                        </Grid>\n                    )}\n                </Grid>\n                <Modal\n                    open={this.state.modal.open}\n                    onClose={() => this.setState({modal: {...this.state.modal, open: false}})}>\n                    <Grid container alignItems={\"center\"} justify={\"center\"}>\n                        <Grid item xs={12} md={6}>\n                            <Paper className={classes.modalPaper}>\n                                <Typography variant={\"h6\"}>New Alias</Typography>\n                                <form onSubmit={this.createMailingList}>\n                                    <Input autoFocus label={\"Name\"} onChange={this.modelModalData(\"name\")}\n                                           value={modal.name}/>\n                                    <Input\n                                        InputProps={{\n                                            endAdornment: <InputAdornment\n                                                position={\"end\"}>@lynbrookrobotics.com</InputAdornment>\n                                        }}\n                                        onChange={this.modelModalData(\"alias\")}\n                                        label={\"Alias\"} value={modal.alias}/>\n                                    <Input\n                                        onChange={this.modelModalData(\"members\")}\n                                        multiline rowsMax={10} label={\"Members\"} value={modal.members}/>\n                                    <Button type={\"submit\"}>Create</Button>\n                                </form>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Modal>\n                <Fab className={classes.fab}\n                     color={\"primary\"}\n                     onClick={() => this.setState({modal: {...this.state.modal, open: true}})}>\n                    <Add/>\n                </Fab>\n            </Dashboard>\n        )\n    }\n\n    state = {\n        aliases: [],\n        modal: {\n            data: {\n                alias: Date.now(),\n                name: \"New Alias\",\n                members: \"\",\n                private: false\n            },\n            open: false\n        }\n    };\n\n    static styles = theme => ({\n        fab: {\n            bottom: theme.spacing.unit * 2,\n            right: theme.spacing.unit * 2,\n            position: \"fixed\",\n        },\n        modalPaper: {\n            padding: theme.spacing.unit * 2\n        }\n    });\n\n    updateAliasField = (alias, field, isCheckbox = false) => e => {\n        const aliases = [].concat(this.state.aliases);\n        aliases.find(it => it.id === alias.id)[field] = isCheckbox ? e.target.checked : e.target.value;\n        this.setState({\n            aliases\n        });\n    };\n}\n\nexport default withStyles(MailingLists.styles)(withSnackbar(MailingLists));","import * as PropTypes from \"prop-types\";\nimport {Button as MuiButton} from \"@material-ui/core\";\nimport React from \"react\";\n\nfunction Button(props) {\n    const {noMarginTop, ...other} = props;\n\n    return (\n        <MuiButton\n            fullWidth\n            color=\"primary\"\n            style={{\n                marginTop: noMarginTop ? 8 : 24\n            }}\n            variant=\"contained\"\n            {...other}/>\n    );\n}\n\nButton.defaultProps = {\n    noMarginTop: false\n};\n\nButton.propTypes = {\n    noMarginTop: PropTypes.bool\n};\n\nexport default Button;","import {FormControl, InputLabel, MenuItem, OutlinedInput, Select, TextField} from \"@material-ui/core\";\nimport React, {Component} from \"react\";\nimport ReactDOM from \"react-dom\";\n\nclass Input extends Component {\n    inputLabelRef = null;\n\n    componentDidMount() {\n        if (this.inputLabelRef) {\n            this.setState({\n                labelWidth: ReactDOM.findDOMNode(this.inputLabelRef).offsetWidth\n            });\n        }\n    }\n\n    render() {\n        const {label, options, type, ...other} = this.props;\n\n        if (type === \"select\") {\n            return (\n                <FormControl\n                    fullWidth\n                    margin=\"normal\"\n                    variant=\"outlined\">\n                    <InputLabel\n                        ref={ref => this.inputLabelRef = ref}\n                        variant=\"outlined\">\n                        {label}\n                    </InputLabel>\n                    <Select\n                        input={\n                            <OutlinedInput labelWidth={this.state.labelWidth}/>\n                        }\n                        variant=\"outlined\"\n                        {...other}>\n                        {options.map(option => <MenuItem key={option} value={option}>{option}</MenuItem>)}\n                    </Select>\n                </FormControl>\n            )\n        } else {\n            return (\n                <TextField\n                    fullWidth\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    {...this.props}/>\n            )\n        }\n    }\n\n    state = {\n        labelWidth: 0\n    };\n}\n\nexport default Input;","import * as PropTypes from 'prop-types';\nimport {ActiveUser, permissionLevels} from \"../settings\";\nimport {AppBar, Toolbar, Typography, Drawer, IconButton, List, ListItem, ListItemText} from '@material-ui/core';\nimport React, {Component, Fragment} from 'react';\nimport {Menu} from \"@material-ui/icons\";\nimport {withStyles} from '@material-ui/core/styles';\nimport {routes} from \"../settings\";\nimport {withRouter} from \"react-router-dom\";\n\nclass Dashboard extends Component {\n    closeDrawer = () => {\n        this.setState({\n            open: false\n        });\n    };\n\n    openDrawer = () => {\n        this.setState({\n            open: true\n        });\n    };\n\n    static propTypes = {\n        children: PropTypes.any.isRequired,\n        classes: PropTypes.object.isRequired,\n        title: PropTypes.string.isRequired\n    };\n\n    render() {\n        const {children, classes, title} = this.props;\n        return (\n            <ActiveUser.Consumer>{\n                activeUser => (\n                    <Fragment>\n                        <AppBar>\n                            <Toolbar className={classes.toolbar}>\n                                <IconButton className={classes.menuButton} color=\"inherit\" onClick={this.openDrawer}>\n                                    <Menu/>\n                                </IconButton>\n                                <Typography color=\"inherit\" component=\"h1\" variant=\"h5\">{title}</Typography>\n                            </Toolbar>\n                        </AppBar>\n                        <Drawer classes={{paper: classes.drawerPaper}} onClose={this.closeDrawer} open={this.state.open}\n                                variant=\"temporary\">\n                            <List>\n                                <ListItem>\n                                    <ListItemText>\n                                        <Typography variant=\"h5\">Member System</Typography>\n                                    </ListItemText>\n                                </ListItem>\n                                {Object.values(routes.private).map(route => permissionLevels.indexOf(activeUser[\"Permission Level\"]) > route.minPermissionLevel || \"Standard\"\n                                    ? <ListItem button key={route.path}\n                                                onClick={() => this.props.history.push(route.path)}>\n                                        <ListItemText>{route.label}</ListItemText>\n                                    </ListItem>\n                                    : null)}\n                            </List>\n                        </Drawer>\n                        <div className={classes.contentSpacer}/>\n                        {children}\n                    </Fragment>\n                )\n            }</ActiveUser.Consumer>\n        );\n    }\n\n    state = {\n        open: false\n    };\n\n    static styles = theme => ({\n        contentSpacer: {\n            ...theme.mixins.toolbar\n        },\n        drawerPaper: {\n            width: 300\n        },\n        menuButton: {\n            marginLeft: -12,\n            marginRight: theme.spacing.unit\n        },\n        toolbar: {\n            alignItems: \"center\",\n            display: \"flex\"\n        }\n    });\n}\n\nexport default withStyles(Dashboard.styles)(withRouter(Dashboard));\n"],"sourceRoot":""}