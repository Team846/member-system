{"version":3,"sources":["settings.js","App.js","serviceWorker.js","index.js"],"names":["permissionLevels","ActiveUser","React","createContext","permissionLevel","model","context","field","_ref","onChange","arguments","length","undefined","value","getNewValue","e","target","Object","_home_travis_build_Team846_member_system_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","setState","apply","state","getDefaultExport","module","default","routes","private","MAILING_LISTS","minPermissionLevel","label","path","resolve","Promise","all","__webpack_require__","then","bind","MEMBERS_TABLE","PROFILE_EDITOR","public","LOGIN","REGISTER","RESET","PhoneNumberInput","props","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","react_input_mask__WEBPACK_IMPORTED_MODULE_3___default","assign","mask","maskChar","alwaysShowMask","isStudent","profile","Role","userProfileFields","options","type","content","InputProps","inputComponent","startAdornment","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","position","multiple","condition","map","completeUserProfileField","prefix","userProfileField","fullField","_home_travis_build_Team846_member_system_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","concat","key","PrivateRoute","Component","component","objectWithoutProperties","react_default","Route","render","firebase","auth","currentUser","Redirect","to","pathname","from","location","App","activeUserProfile","authEvaluation","_this2","this","unsubscribe","onAuthStateChanged","user","firestore","doc","uid","get","snapshot","data","build","maxStack","settings","Provider","index_es","styles","theme","Switch","values","routeFromDescriptor","style","display","alignItems","justifyContent","minHeight","RouteComponent","descriptor","others","asyncComponent","createMuiTheme","palette","primary","typography","useNextVariants","withRouter","Boolean","window","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","app","HashRouter","src_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3cea8edf.chunk.js","sourcesContent":["import {InputAdornment} from \"@material-ui/core\";\nimport InputMask from \"react-input-mask\";\nimport React from \"react\";\n\nexport const permissionLevels = [\"Standard\", \"Prospective\", \"Parent\", \"Member\", \"Mentor\", \"Officer\", \"Administrator\"];\n\nexport const ActiveUser = React.createContext({\n    permissionLevel: permissionLevels[0]\n});\n\n/* TODO: Support for nesting, notated by periods */\nexport const model = context => (field, onChange = \"onChange\", value = \"value\", getNewValue = e => e.target.value) => {\n    return {\n        [onChange]() {\n            context.setState({\n                [field]: getNewValue(...arguments)\n            });\n        },\n        [value]: context.state[field]\n    }\n};\n\nconst getDefaultExport = module => module.default;\n\nexport const routes = {\n    private: {\n        MAILING_LISTS: {\n            minPermissionLevel: \"Mentor\",\n            label: \"Mailing Lists\",\n            path: \"/mailing-lists\",\n            resolve: () => import(/* webpackChunkName: \"MailingLists\" */ \"./routes/private/MailingLists\").then(getDefaultExport)\n        },\n        MEMBERS_TABLE: {\n            label: \"Members\",\n            path: \"/members\",\n            resolve: () => import(/* webpackChunkName: \"Members\" */ \"./routes/private/MembersTable\").then(getDefaultExport)\n        },\n        PROFILE_EDITOR: {\n            label: \"Profile Editor\",\n            path: \"/\",\n            resolve: () => import(/* webpackChunkName: \"ProfileEditor\" */\"./routes/private/ProfileEditor\").then(getDefaultExport)\n        }\n    },\n    public: {\n        LOGIN: {\n            label: \"Login\",\n            path: \"/login\",\n            resolve: () => import(/* webpackChunkName: \"Login\" */ \"./routes/public/Login\").then(getDefaultExport)\n        },\n        REGISTER: {\n            label: \"Register\",\n            path: \"/register\",\n            resolve: () => import(/* webpackChunkName: \"Register\" */ \"./routes/public/Register\").then(getDefaultExport)\n        },\n        RESET: {\n            label: \"Reset\",\n            path: \"/reset\",\n            resolve: () => import(/* webpackChunkName: \"Reset\" */ \"./routes/public/Reset\").then(getDefaultExport)\n        }\n    }\n};\n\nconst completeUserProfileField = (prefix = \"\") => userProfileField => {\n    let fullField;\n\n    if (userProfileField.type === \"multi-input-field\" || userProfileField.type === \"group\") {\n        fullField = {\n            ...userProfileField,\n            content: userProfileField.content.map(completeUserProfileField(`${prefix + userProfileField.label} `))\n        };\n    } else {\n        fullField = Object.assign({\n            type: \"text\"\n        }, userProfileField);\n    }\n\n    return {\n        condition: () => true,\n        ...fullField,\n        key: prefix + fullField.label\n    };\n};\n\nconst PhoneNumberInput = props => <InputMask mask={\"(999) 999-9999\"} maskChar={\"#\"} alwaysShowMask {...props}/>;\n\n// noinspection JSUnusedGlobalSymbols\nPhoneNumberInput.props = {\n    inputComponent: PhoneNumberInput,\n    startAdornment: <InputAdornment position={\"start\"}>+1</InputAdornment>\n};\n\nconst isStudent = profile => profile.Role === \"Student\";\n\n// noinspection JSUnusedGlobalSymbols\nexport const userProfileFields = [{\n    label: \"Name\"\n}, {\n    label: \"Email\"\n}, {\n    label: \"Gender\",\n    options: [\"Male\", \"Female\", \"Other\"],\n    type: \"select\"\n}, {\n    content: [{\n        InputProps: PhoneNumberInput.props,\n        label: \"Number\"\n    }, {\n        label: \"Type\",\n        options: [\"Cell\", \"Home\"],\n        type: \"select\"\n    }],\n    label: \"Primary Phone\",\n    type: \"multi-input-field\"\n}, {\n    content: [{\n        InputProps: PhoneNumberInput.props,\n        label: \"Number\"\n    }, {\n        label: \"Type\",\n        options: [\"Cell\", \"Home\"],\n        type: \"select\"\n    }],\n    label: \"Backup Phone\",\n    type: \"multi-input-field\"\n}, {\n    content: [{\n        label: \"Line 1\"\n    }, {\n        label: \"Line 2\"\n    }, {\n        label: \"Zip Code\"\n    }],\n    label: \"Home Address\",\n    type: \"multi-input-field\"\n}, {\n    label: \"Teams\",\n    multiple: true,\n    options: [\"Animation\", \"Design\", \"Electrical\", \"Hardware\", \"Software\"],\n    type: \"select\"\n}, {\n    label: \"Role\",\n    options: [\"Mentor\", \"Student\", \"Other\"],\n    type: \"select\"\n}, {\n    condition: isStudent,\n    label: \"Student ID\"\n}, {\n    condition: isStudent,\n    label: \"Graduation Year\"\n}, {\n    condition: isStudent,\n    content: [{\n        label: \"Name\"\n    }, {\n        label: \"Email\"\n    }, {\n        label: \"Employer\"\n    }],\n    label: \"Parent 1\",\n    type: \"group\"\n}, {\n    condition: isStudent,\n    content: [{\n        label: \"Name\"\n    }, {\n        label: \"Email\"\n    }, {\n        label: \"Employer\"\n    }],\n    label: \"Parent 2\",\n    type: \"group\"\n}].map(completeUserProfileField());\n","import * as PropTypes from \"prop-types\";\nimport {asyncComponent} from \"react-async-component\";\nimport {CircularProgress, createMuiTheme, CssBaseline, MuiThemeProvider} from \"@material-ui/core\";\nimport {deepOrange as primary} from \"@material-ui/core/colors\";\nimport firebase from \"firebase/app\";\nimport React, {Component} from 'react';\nimport {Redirect, Route, Switch, withRouter} from \"react-router-dom\";\nimport {ActiveUser, permissionLevels, routes} from \"./settings\";\nimport {SnackbarProvider} from \"notistack\";\nimport \"firebase/auth\";\n\nfunction PrivateRoute({component: Component, ...props}) {\n    return (\n        <Route\n            render={props =>\n                firebase.auth().currentUser !== null\n                    ? <Component {...props} />\n                    : <Redirect to={{\n                        pathname: routes.public.LOGIN.path,\n                        state: {\n                            from: props.location\n                        }\n                    }}/>\n            }\n            {...props} />\n    )\n}\n\nclass App extends Component {\n    componentDidMount() {\n        this.unsubscribe = firebase.auth().onAuthStateChanged(user => {\n            firebase.firestore().doc(`users/${user.uid}`).get().then(snapshot => {\n                this.setState({\n                    activeUserProfile: snapshot.data(),\n                    authEvaluation: user\n                });\n            });\n        });\n    }\n\n    componentWillUnmount() {\n        this.unsubscribe();\n    }\n\n    static propTypes = {\n        history: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n    };\n\n    render() {\n        return this.state.authEvaluation !== undefined\n            ? <SnackbarProvider maxStack={3}>\n                <ActiveUser.Provider value={this.state.activeUserProfile}>\n                    <CssBaseline/>\n                    <MuiThemeProvider theme={App.theme}>\n                        <Switch>\n                            {Object.values(routes.public)\n                                .map(App.routeFromDescriptor(Route))}\n                            {Object.values(routes.private)\n                                .map(App.routeFromDescriptor(PrivateRoute))}\n                            <Route render={props => <Redirect to={{pathname: \"/login\"}} {...props} />}/>\n                        </Switch>\n                    </MuiThemeProvider>\n                </ActiveUser.Provider>\n            </SnackbarProvider>\n            : <div style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                minHeight: \"100vh\"\n            }}><CircularProgress/></div>;\n    }\n\n    static routeFromDescriptor = RouteComponent => descriptor => {\n        const {resolve, ...others} = descriptor;\n\n        return (\n            <RouteComponent\n                component={asyncComponent({\n                    resolve\n                })}\n                key={descriptor.path}\n                {...others}\n            />\n        );\n    };\n\n    state = {\n        activeUserProfile: {\n            permissionLevel: permissionLevels[0]\n        },\n        authEvaluation: undefined\n    };\n\n    static theme = createMuiTheme({\n        palette: {\n            primary\n        },\n        typography: {\n            useNextVariants: true\n        }\n    });\n}\n\nexport default withRouter(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import App from './App';\nimport {HashRouter} from \"react-router-dom\";\nimport firebase from \"firebase/app\";\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport * as serviceWorker from './serviceWorker';\nimport \"firebase/firestore\";\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyC5DIBtTgvBFH7RTu3d4LFUtsvtQ9OXyqQ\",\n    authDomain: \"member-system-38390.firebaseapp.com\",\n    databaseURL: \"https://member-system-38390.firebaseio.com\",\n    projectId: \"member-system-38390\",\n    storageBucket: \"member-system-38390.appspot.com\",\n    messagingSenderId: \"299255312336\"\n});\n\nconst app = (\n    <HashRouter>\n        <App/>\n    </HashRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}