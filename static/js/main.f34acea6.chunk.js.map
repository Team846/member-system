{"version":3,"sources":["App.js","serviceWorker.js","index.js","settings.js"],"names":["PrivateRoute","_ref","Component","component","props","Object","objectWithoutProperties","react_default","a","createElement","Route","assign","render","firebase","auth","currentUser","Redirect","to","pathname","routes","public","LOGIN","path","state","from","location","App","authEvaluation","undefined","_this2","this","unsubscribe","onAuthStateChanged","user","setState","build","maxStack","react","index_es","styles","theme","Switch","values","map","routeFromDescriptor","private","RouteComponent","descriptor","resolve","others","asyncComponent","key","createMuiTheme","palette","primary","typography","useNextVariants","withRouter","Boolean","window","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","app","HashRouter","src_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","model","context","field","onChange","arguments","length","value","getNewValue","e","target","_home_travis_build_Team846_member_system_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","apply","getDefaultExport","module","default","MAILING_LISTS","label","Promise","all","__webpack_require__","bind","MEMBERS_TABLE","PROFILE_EDITOR","REGISTER","RESET","PhoneNumberInput","react__WEBPACK_IMPORTED_MODULE_4___default","react_input_mask__WEBPACK_IMPORTED_MODULE_3___default","mask","maskChar","alwaysShowMask","isStudent","profile","Role","userProfileFields","options","type","content","InputProps","inputComponent","startAdornment","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","position","multiple","condition","completeUserProfileField","prefix","userProfileField","fullField","_home_travis_build_Team846_member_system_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","concat"],"mappings":"iUAWA,SAASA,EAATC,GAAwD,IAAtBC,EAAsBD,EAAjCE,UAAyBC,EAAQC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,eACpD,OACIM,EAAAC,EAAAC,cAACC,EAAA,EAADL,OAAAM,OAAA,CACIC,OAAQ,SAAAR,GAAK,OACuB,OAAhCS,IAASC,OAAOC,YACVR,EAAAC,EAAAC,cAACP,EAAcE,GACfG,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAUC,GAAI,CACZC,SAAUC,IAAOC,OAAOC,MAAMC,KAC9BC,MAAO,CACHC,KAAMpB,EAAMqB,eAIxBrB,QAIVsB,6MAkDFH,MAAQ,CACJI,oBAAgBC,sFAlDA,IAAAC,EAAAC,KAChBA,KAAKC,YAAclB,IAASC,OAAOkB,mBAAmB,SAAAC,GAClDJ,EAAKK,SAAS,CACVP,eAAgBM,qDAMxBH,KAAKC,+CASL,YAAqCH,IAA9BE,KAAKP,MAAMI,eACdpB,EAAAC,EAAAC,cAAC0B,EAAA,iBAAD,CAAkBC,SAAU,GACxB7B,EAAAC,EAAAC,cAAC4B,EAAA,SAAD,KACI9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,MACA/B,EAAAC,EAAAC,cAAC8B,EAAA,iBAAD,CAAkBC,MAAOd,EAAIc,OACzBjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,KACKpC,OAAOqC,OAAOvB,IAAOC,QACjBuB,IAAIjB,EAAIkB,oBAAoBlC,MAChCL,OAAOqC,OAAOvB,IAAO0B,SACjBF,IAAIjB,EAAIkB,oBAAoB5C,IACjCO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOE,OAAQ,SAAAR,GAAK,OAAIG,EAAAC,EAAAC,cAACO,EAAA,EAADX,OAAAM,OAAA,CAAUM,GAAI,CAACC,SAAU,WAAed,WAIzD,YAjCjBF,aAAZwB,EAoCKkB,oBAAsB,SAAAE,GAAc,OAAI,SAAAC,GAAc,IAClDC,EAAsBD,EAAtBC,QAAYC,EADsC5C,OAAAC,EAAA,EAAAD,CAC5B0C,EAD4B,aAGzD,OACIxC,EAAAC,EAAAC,cAACqC,EAADzC,OAAAM,OAAA,CACIR,UAAW+C,yBAAe,CACtBF,YAEJG,IAAKJ,EAAWzB,MACZ2B,MA7CdvB,EAsDKc,MAAQY,yBAAe,CAC1BC,QAAS,CACLC,sBAEJC,WAAY,CACRC,iBAAiB,KAKdC,kBAAW/B,8BChFNgC,QACW,cAA7BC,OAAOlC,SAASmC,UAEe,UAA7BD,OAAOlC,SAASmC,UAEhBD,OAAOlC,SAASmC,SAASC,MACvB,kECVNhD,IAASiD,cAAc,CACnBC,OAAQ,0CACRC,WAAY,sCACZC,YAAa,6CACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,iBAGvB,IAAMC,EACF9D,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,KACI/D,EAAAC,EAAAC,cAAC8D,EAAD,OAIRC,IAAS5D,OAAOyD,EAAKI,SAASC,eAAe,SD0GvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,8ME9HNC,EAAQ,SAAAC,GAAO,OAAI,SAACC,GAAqF,IAAAlF,EAA9EmF,EAA8EC,UAAAC,OAAA,QAAA1D,IAAAyD,UAAA,GAAAA,UAAA,GAAnE,WAAYE,EAAuDF,UAAAC,OAAA,QAAA1D,IAAAyD,UAAA,GAAAA,UAAA,GAA/C,QAASG,EAAsCH,UAAAC,OAAA,QAAA1D,IAAAyD,UAAA,GAAAA,UAAA,GAAxB,SAAAI,GAAC,OAAIA,EAAEC,OAAOH,OACxG,OAAAtF,EAAA,GAAAI,OAAAsF,EAAA,EAAAtF,CAAAJ,EACKmF,EADL,WAEQF,EAAQhD,SAAR7B,OAAAsF,EAAA,EAAAtF,CAAA,GACK8E,EAAQK,EAAWI,WAAX,EAAeP,eAHpChF,OAAAsF,EAAA,EAAAtF,CAAAJ,EAMKsF,EAAQL,EAAQ3D,MAAM4D,IAN3BlF,IAUE4F,EAAmB,SAAAC,GAAM,OAAIA,EAAOC,SAE7B5E,EAAS,CAClB0B,QAAS,CACLmD,cAAe,CACXC,MAAO,gBACP3E,KAAM,iBACN0B,QAAS,kBAAMkD,QAAAC,IAAA,CAAAC,EAAAX,EAAA,GAAAW,EAAAX,EAAA,KAAAX,KAAAsB,EAAAC,KAAA,WAA+EvB,KAAKe,KAEvGS,cAAe,CACXL,MAAO,UACP3E,KAAM,WACN0B,QAAS,kBAAMkD,QAAAC,IAAA,CAAAC,EAAAX,EAAA,GAAAW,EAAAX,EAAA,KAAAX,KAAAsB,EAAAC,KAAA,WAA0EvB,KAAKe,KAElGU,eAAgB,CACZN,MAAO,iBACP3E,KAAM,IACN0B,QAAS,kBAAMkD,QAAAC,IAAA,CAAAC,EAAAX,EAAA,GAAAW,EAAAX,EAAA,GAAAW,EAAAX,EAAA,KAAAX,KAAAsB,EAAAC,KAAA,WAAgFvB,KAAKe,MAG5GzE,OAAQ,CACJC,MAAO,CACH4E,MAAO,QACP3E,KAAM,SACN0B,QAAS,kBAAMoD,EAAAX,EAAA,GAAAX,KAAAsB,EAAAC,KAAA,WAAgEvB,KAAKe,KAExFW,SAAU,CACNP,MAAO,WACP3E,KAAM,YACN0B,QAAS,kBAAMoD,EAAAX,EAAA,GAAAX,KAAAsB,EAAAC,KAAA,WAAsEvB,KAAKe,KAE9FY,MAAO,CACHR,MAAO,QACP3E,KAAM,SACN0B,QAAS,kBAAMoD,EAAAX,EAAA,GAAAX,KAAAsB,EAAAC,KAAA,WAAgEvB,KAAKe,OA0B1Fa,EAAmB,SAAAtG,GAAK,OAAIuG,EAAAnG,EAAAC,cAACmG,EAAApG,EAADH,OAAAM,OAAA,CAAWkG,KAAM,iBAAkBC,SAAU,IAAKC,gBAAc,GAAK3G,KAQjG4G,EAAY,SAAAC,GAAO,MAAqB,YAAjBA,EAAQC,MAGxBC,EAAoB,CAAC,CAC9BlB,MAAO,QACR,CACCA,MAAO,SACR,CACCA,MAAO,SACPmB,QAAS,CAAC,OAAQ,SAAU,SAC5BC,KAAM,UACP,CACCC,QAAS,CAAC,CACNC,WAlBRb,EAAiBtG,MAAQ,CACrBoH,eAAgBd,EAChBe,eAAgBd,EAAAnG,EAAAC,cAACiH,EAAA,EAAD,CAAgBC,SAAU,SAA1B,OAiBZ1B,MAAO,UACR,CACCA,MAAO,OACPmB,QAAS,CAAC,OAAQ,QAClBC,KAAM,WAEVpB,MAAO,gBACPoB,KAAM,qBACP,CACCC,QAAS,CAAC,CACNC,WAAYb,EAAiBtG,MAC7B6F,MAAO,UACR,CACCA,MAAO,OACPmB,QAAS,CAAC,OAAQ,QAClBC,KAAM,WAEVpB,MAAO,eACPoB,KAAM,qBACP,CACCC,QAAS,CAAC,CACNrB,MAAO,UACR,CACCA,MAAO,UACR,CACCA,MAAO,aAEXA,MAAO,eACPoB,KAAM,qBACP,CACCpB,MAAO,QACP2B,UAAU,EACVR,QAAS,CAAC,YAAa,SAAU,aAAc,WAAY,YAC3DC,KAAM,UACP,CACCpB,MAAO,OACPmB,QAAS,CAAC,SAAU,UAAW,SAC/BC,KAAM,UACP,CACCQ,UAAWb,EACXf,MAAO,cACR,CACC4B,UAAWb,EACXf,MAAO,mBACR,CACC4B,UAAWb,EACXM,QAAS,CAAC,CACNrB,MAAO,QACR,CACCA,MAAO,SACR,CACCA,MAAO,aAEXA,MAAO,WACPoB,KAAM,SACP,CACCQ,UAAWb,EACXM,QAAS,CAAC,CACNrB,MAAO,QACR,CACCA,MAAO,SACR,CACCA,MAAO,aAEXA,MAAO,WACPoB,KAAM,UACP1E,IA7G8B,SAA3BmF,IAA2B,IAACC,EAAD1C,UAAAC,OAAA,QAAA1D,IAAAyD,UAAA,GAAAA,UAAA,GAAU,GAAV,OAAiB,SAAA2C,GAC9C,IAAIC,EAaJ,OAVIA,EAD0B,sBAA1BD,EAAiBX,MAA0D,UAA1BW,EAAiBX,KACzDhH,OAAA6H,EAAA,EAAA7H,CAAA,GACF2H,EADE,CAELV,QAASU,EAAiBV,QAAQ3E,IAAImF,EAAwB,GAAAK,OAAIJ,EAASC,EAAiB/B,MAA9B,SAGtD5F,OAAOM,OAAO,CACtB0G,KAAM,QACPW,GAGA3H,OAAA6H,EAAA,EAAA7H,CAAA,CACHwH,UAAW,kBAAM,IACdI,EAFP,CAGI9E,IAAK4E,EAASE,EAAUhC,SA4FzB6B","file":"static/js/main.f34acea6.chunk.js","sourcesContent":["import * as PropTypes from \"prop-types\";\nimport {asyncComponent} from \"react-async-component\";\nimport {createMuiTheme, CssBaseline, MuiThemeProvider} from \"@material-ui/core\";\nimport {deepOrange as primary} from \"@material-ui/core/colors\";\nimport firebase from \"firebase/app\";\nimport React, {Component, Fragment} from 'react';\nimport {Redirect, Route, Switch, withRouter} from \"react-router-dom\";\nimport {routes} from \"./settings\";\nimport {SnackbarProvider} from \"notistack\";\nimport \"firebase/auth\";\n\nfunction PrivateRoute({component: Component, ...props}) {\n    return (\n        <Route\n            render={props =>\n                firebase.auth().currentUser !== null\n                    ? <Component {...props} />\n                    : <Redirect to={{\n                        pathname: routes.public.LOGIN.path,\n                        state: {\n                            from: props.location\n                        }\n                    }}/>\n            }\n            {...props} />\n    )\n}\n\nclass App extends Component {\n    componentDidMount() {\n        this.unsubscribe = firebase.auth().onAuthStateChanged(user => {\n            this.setState({\n                authEvaluation: user\n            })\n        });\n    }\n\n    componentWillUnmount() {\n        this.unsubscribe();\n    }\n\n    static propTypes = {\n        history: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n    };\n\n    render() {\n        return this.state.authEvaluation !== undefined ? (\n            <SnackbarProvider maxStack={3}>\n                <Fragment>\n                    <CssBaseline/>\n                    <MuiThemeProvider theme={App.theme}>\n                        <Switch>\n                            {Object.values(routes.public)\n                                .map(App.routeFromDescriptor(Route))}\n                            {Object.values(routes.private)\n                                .map(App.routeFromDescriptor(PrivateRoute))}\n                            <Route render={props => <Redirect to={{pathname: \"/login\"}} {...props} />}/>\n                        </Switch>\n                    </MuiThemeProvider>\n                </Fragment>\n            </SnackbarProvider>) : null;\n    }\n\n    static routeFromDescriptor = RouteComponent => descriptor => {\n        const {resolve, ...others} = descriptor;\n\n        return (\n            <RouteComponent\n                component={asyncComponent({\n                    resolve\n                })}\n                key={descriptor.path}\n                {...others}\n            />\n        );\n    };\n\n    state = {\n        authEvaluation: undefined\n    };\n\n    static theme = createMuiTheme({\n        palette: {\n            primary\n        },\n        typography: {\n            useNextVariants: true\n        }\n    });\n}\n\nexport default withRouter(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import App from './App';\nimport {HashRouter} from \"react-router-dom\";\nimport firebase from \"firebase/app\";\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport * as serviceWorker from './serviceWorker';\nimport \"firebase/firestore\";\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyC5DIBtTgvBFH7RTu3d4LFUtsvtQ9OXyqQ\",\n    authDomain: \"member-system-38390.firebaseapp.com\",\n    databaseURL: \"https://member-system-38390.firebaseio.com\",\n    projectId: \"member-system-38390\",\n    storageBucket: \"member-system-38390.appspot.com\",\n    messagingSenderId: \"299255312336\"\n});\n\nconst app = (\n    <HashRouter>\n        <App/>\n    </HashRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {InputAdornment} from \"@material-ui/core\";\nimport InputMask from \"react-input-mask\";\nimport React from \"react\";\n\n/* TODO: Support for nesting, notated by periods */\nexport const model = context => (field, onChange = \"onChange\", value = \"value\", getNewValue = e => e.target.value) => {\n    return {\n        [onChange]() {\n            context.setState({\n                [field]: getNewValue(...arguments)\n            });\n        },\n        [value]: context.state[field]\n    }\n};\n\nconst getDefaultExport = module => module.default;\n\nexport const routes = {\n    private: {\n        MAILING_LISTS: {\n            label: \"Mailing Lists\",\n            path: \"/mailing-lists\",\n            resolve: () => import(/* webpackChunkName: \"MailingLists\" */ \"./routes/private/MailingLists\").then(getDefaultExport)\n        },\n        MEMBERS_TABLE: {\n            label: \"Members\",\n            path: \"/members\",\n            resolve: () => import(/* webpackChunkName: \"Members\" */ \"./routes/private/MembersTable\").then(getDefaultExport)\n        },\n        PROFILE_EDITOR: {\n            label: \"Profile Editor\",\n            path: \"/\",\n            resolve: () => import(/* webpackChunkName: \"ProfileEditor\" */\"./routes/private/ProfileEditor\").then(getDefaultExport)\n        }\n    },\n    public: {\n        LOGIN: {\n            label: \"Login\",\n            path: \"/login\",\n            resolve: () => import(/* webpackChunkName: \"Login\" */ \"./routes/public/Login\").then(getDefaultExport)\n        },\n        REGISTER: {\n            label: \"Register\",\n            path: \"/register\",\n            resolve: () => import(/* webpackChunkName: \"Register\" */ \"./routes/public/Register\").then(getDefaultExport)\n        },\n        RESET: {\n            label: \"Reset\",\n            path: \"/reset\",\n            resolve: () => import(/* webpackChunkName: \"Reset\" */ \"./routes/public/Reset\").then(getDefaultExport)\n        }\n    }\n};\n\nconst completeUserProfileField = (prefix = \"\") => userProfileField => {\n    let fullField;\n\n    if (userProfileField.type === \"multi-input-field\" || userProfileField.type === \"group\") {\n        fullField = {\n            ...userProfileField,\n            content: userProfileField.content.map(completeUserProfileField(`${prefix + userProfileField.label} `))\n        };\n    } else {\n        fullField = Object.assign({\n            type: \"text\"\n        }, userProfileField);\n    }\n\n    return {\n        condition: () => true,\n        ...fullField,\n        key: prefix + fullField.label\n    };\n};\n\nconst PhoneNumberInput = props => <InputMask mask={\"(999) 999-9999\"} maskChar={\"#\"} alwaysShowMask {...props}/>;\n\n// noinspection JSUnusedGlobalSymbols\nPhoneNumberInput.props = {\n    inputComponent: PhoneNumberInput,\n    startAdornment: <InputAdornment position={\"start\"}>+1</InputAdornment>\n};\n\nconst isStudent = profile => profile.Role === \"Student\";\n\n// noinspection JSUnusedGlobalSymbols\nexport const userProfileFields = [{\n    label: \"Name\"\n}, {\n    label: \"Email\"\n}, {\n    label: \"Gender\",\n    options: [\"Male\", \"Female\", \"Other\"],\n    type: \"select\"\n}, {\n    content: [{\n        InputProps: PhoneNumberInput.props,\n        label: \"Number\"\n    }, {\n        label: \"Type\",\n        options: [\"Cell\", \"Home\"],\n        type: \"select\"\n    }],\n    label: \"Primary Phone\",\n    type: \"multi-input-field\"\n}, {\n    content: [{\n        InputProps: PhoneNumberInput.props,\n        label: \"Number\"\n    }, {\n        label: \"Type\",\n        options: [\"Cell\", \"Home\"],\n        type: \"select\"\n    }],\n    label: \"Backup Phone\",\n    type: \"multi-input-field\"\n}, {\n    content: [{\n        label: \"Line 1\"\n    }, {\n        label: \"Line 2\"\n    }, {\n        label: \"Zip Code\"\n    }],\n    label: \"Home Address\",\n    type: \"multi-input-field\"\n}, {\n    label: \"Teams\",\n    multiple: true,\n    options: [\"Animation\", \"Design\", \"Electrical\", \"Hardware\", \"Software\"],\n    type: \"select\"\n}, {\n    label: \"Role\",\n    options: [\"Mentor\", \"Student\", \"Other\"],\n    type: \"select\"\n}, {\n    condition: isStudent,\n    label: \"Student ID\"\n}, {\n    condition: isStudent,\n    label: \"Graduation Year\"\n}, {\n    condition: isStudent,\n    content: [{\n        label: \"Name\"\n    }, {\n        label: \"Email\"\n    }, {\n        label: \"Employer\"\n    }],\n    label: \"Parent 1\",\n    type: \"group\"\n}, {\n    condition: isStudent,\n    content: [{\n        label: \"Name\"\n    }, {\n        label: \"Email\"\n    }, {\n        label: \"Employer\"\n    }],\n    label: \"Parent 2\",\n    type: \"group\"\n}].map(completeUserProfileField());\n"],"sourceRoot":""}